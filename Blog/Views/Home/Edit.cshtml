@model CreatePostViewModel

@{
    Layout = "_Layout";
}


<h2 style="margin-top: 20px;">Edit post #@Model.Post.Id</h2>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" onkeypress="return event.keyCode != 13;">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Post.Id"/>
            <div class="form-group">
                <label asp-for="Post.Title" class="control-label"></label>
                <input asp-for="Post.Title" class="form-control" />
                <span asp-validation-for="Post.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Post.Content" class="control-label"></label>
                <textarea asp-for="Post.Content" class="form-control" id="postContent" style="min-height: 300px;"></textarea>
                <span asp-validation-for="Post.Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tags" class="control-label"></label>
                <div id="tags">
                    @Html.HiddenFor(m => m.Tags, new { id = "modelTags" })
                    <input type="text" id="add_tag" placeholder="Add a tag......">
                    <div class="tags_dropdown"></div>
                </div>
            </div>
            <input id="image" type="hidden" asp-for="Post.Image"/>
            <div class="form-group">
                @Html.ActionLink("Cancel", "Index","Home", null, new { @class = "btn btn-danger" })
                <input type="submit" onclick="addTags()" value="Save" class="btn btn-primary"/>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <img id="postImg" src="@Model.Post.Image.Replace("/200","/400")" onerror="changePic()" />
        <button id="btnChangePic" class="btn btn-primary" style="margin: 10px 10px 0 0;">Change picture</button>
    </div>
</div>


@section Scripts
    {
    <script>

        var currentPic = Math.floor((Math.random() * 1084) + 1);

        $(document).ready(function () {
            $("#add_tag").on('keyup', function (e) {
                if (e.keyCode == 13) {
                    addTags();
                }
            });

            $("#btnChangePic").click(function(e) {
                changePic();
            });

            $("#postContent").on('keyup', function (e) {
                if (e.keyCode == 13) {
                    var newValue = $("#postContent").val() + "\n";
                    $("#postContent").val(newValue);
                }
            });
        });

        function changePic() {
            currentPic = Math.floor((Math.random() * 1084) + 1);
            $('#postImg').attr("src", "https://picsum.photos/400/?image=" + currentPic);
            console.log(currentPic);
        }

        function imageExists(url, callback) {
            var img = new Image();
            img.onload = function() { callback(true); };
            img.onerror = function() { callback(false); };
            img.src = url;
        }


        function addTags() {
            $('#modelTags').val($('#tagInput').val());
            $('#image').val($('#postImg').attr("src"));
        }

        function getTags() {
            var myArray = [];

            @foreach (var d in Model.Tags.Split(',').ToList())
            {
                @:myArray.push("@d");
            }

            console.log(myArray);
            return myArray;
        }

        new inputTags({
            asd: true,
            id: 'add_tag',
            tags: getTags(),
            maxTags: 20,
            allowDuplicateTags: false,
            onTagRemove: function (tag) {
                addTags();
            }
        });

    </script>
}
